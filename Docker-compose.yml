services:
  airflow-webserver:
    image: apache/airflow:2.9.1
    restart: always
    depends_on:
      - db
    env_file:
      - .env
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./airflow/plugins:/opt/airflow/plugins
      - ./src:/opt/airflow/src
    ports:
      - "8080:8080"
    command: webserver
    networks:
      - traffic_network

  airflow-scheduler:
    image: apache/airflow:2.9.1
    restart: always
    depends_on:
      - airflow-webserver
    env_file:
      - .env
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./airflow/plugins:/opt/airflow/plugins
      - ./src:/opt/airflow/src
    command: scheduler
    networks:
      - traffic_network


  db:
    image: postgres:latest
    env_file:
      - .env
    expose:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - traffic_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s

#  main:
#    build: .
#    container_name: main
#    ports:
#      - "8000:8000"
#    env_file:
#      - .env
#    depends_on:
#       db:
#        condition: service_healthy
#    volumes:
#      - .:/app
#    networks:
#      - traffic_network

volumes:
  db_data:


networks:
  traffic_network:
    driver: bridge





